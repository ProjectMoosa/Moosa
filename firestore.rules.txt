rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---

    // Super admin by email
    function isSuperAdmin() {
      return request.auth != null && 
        (request.auth.token.email == 'moosa.solution@gmail.com' || 
         request.auth.token.email == 'heytechmate@gmail.com');
    }

    // Super admin by user doc
    function isSuperAdminByDoc() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super_admin';
    }

    function isAuthorizedSuperAdmin() {
      return isSuperAdmin() || isSuperAdminByDoc();
    }

    // Vendor can access their own user doc
    function isVendorSelf(userId) {
      return request.auth != null && request.auth.uid == userId &&
        exists(/databases/$(database)/documents/users/$(userId)) &&
        get(/databases/$(database)/documents/users/$(userId)).data.role == 'vendor';
    }

    // Vendor can access their own vendor_account doc
    function isVendorAccountSelf(vendorId) {
      return request.auth != null && request.auth.uid == vendorId &&
        exists(/databases/$(database)/documents/users/$(vendorId)) &&
        get(/databases/$(database)/documents/users/$(vendorId)).data.role == 'vendor';
    }

    // --- Rules ---

    // Users - self-access or super admin
    match /users/{userId} {
      allow read, write: if isAuthorizedSuperAdmin() || isVendorSelf(userId);
    }

    // Vendor accounts - super admin can write, vendor can read their own by email
    match /vendor_accounts/{vendorId} {
      allow read: if isAuthorizedSuperAdmin() || (request.auth != null && resource.data.email == request.auth.token.email);
      allow write: if isAuthorizedSuperAdmin();
    }

    // Universal Product Master - allow read for all authenticated users, write for super admin only
    match /products_master/{productId} {
      allow read: if request.auth != null;
      allow write: if isAuthorizedSuperAdmin();
    }

    // Orders - vendor can read/write their own, super admin can read/write all
    match /orders/{orderId} {
      allow read, write: if isAuthorizedSuperAdmin();
      allow read, write: if request.auth != null && resource.data.vendorId == request.auth.uid;
    }

    // Notifications - vendor can read their own, super admin can read/write all
    match /notifications/{notificationId} {
      allow read, write: if isAuthorizedSuperAdmin();
      allow read: if request.auth != null && 
        resource.data.recipientType == 'vendor' &&
        resource.data.recipientId == request.auth.uid;
    }

    // Payments - vendor can read their own, super admin can read/write all
    match /payments/{paymentId} {
      allow read, write: if isAuthorizedSuperAdmin();
      allow read: if request.auth != null && resource.data.vendorId == request.auth.uid;
    }

    // Subscription Plans - only super admin can read/write
    match /subscription_plans/{planId} {
      allow read, write: if isAuthorizedSuperAdmin();
    }

    // Payment records - super admin only
    match /payment_records/{paymentId} {
      allow read, write: if isAuthorizedSuperAdmin();
    }

    // Vendor stocks - vendor can read/write their own, super admin can read/write all
    match /vendor_stocks/{stockId} {
      allow read: if isAuthorizedSuperAdmin() || (request.auth != null && resource.data.vendorId == request.auth.uid);
      allow write: if isAuthorizedSuperAdmin() || (request.auth != null && request.resource.data.vendorId == request.auth.uid);
    }

    // Fallback - super admin can read/write anything
    match /{document=**} {
      allow read, write: if isAuthorizedSuperAdmin();
    }
  }
} 